import { type Repository } from "@prisma/client";
import Head from "next/head";
import Link from "next/link";
import { RepoEmptyPlaceholder } from "~/components/repo-empty-placeholder";
import { Skeleton } from "~/components/ui/skeleton";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "~/components/ui/table";
import { AddRepoButton } from "~/containers/repositories/AddRepo";
import { api } from "~/utils/api";

function RepoTable({ repos }: { repos: Repository[] }) {
  return (
    <Table>
      <TableHeader>
        <TableRow>
          <TableHead className="w-[100px]">Name</TableHead>
          <TableHead>URL</TableHead>
          <TableCell className="text-right"></TableCell>
        </TableRow>
      </TableHeader>
      <TableBody>
        {repos.map((repo) => (
          <TableRow key={repo.id}>
            <TableCell className="font-medium">
              <Link href={`/repos/${repo.id}`} className="text-blue-600">
                {repo.name}
              </Link>
            </TableCell>
            <TableCell>{repo.url}</TableCell>
            <TableCell className="text-right"></TableCell>
          </TableRow>
        ))}
      </TableBody>
    </Table>
  );
}

export default function Home() {
  const { data: repos, isLoading } = api.repo.getAll.useQuery();
  return (
    <>
      <Head>
        <title>Combat Training</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="space-y-6">
        <div className="px-4">
          <div className="flex flex-row items-center justify-between">
            <div>
              <h3 className="text-lg font-medium">My Repositories</h3>
              <p className="text-sm text-muted-foreground">
                View your repositories and their files
              </p>
            </div>
            <div>
              <AddRepoButton />
            </div>
          </div>
          {isLoading && <Skeleton className="h-20" />}
          {!isLoading && repos?.length === 0 && <RepoEmptyPlaceholder />}
          {repos && <RepoTable repos={repos} />}
        </div>
      </div>
    </>
  );
}
